// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId String @id @default(uuid())
  firstname String
  lastname  String
  username  String @unique
  password  String

  teacher      Teacher?
  refreshToken RefreshToken[]
}

model RefreshToken {
  refreshTokenId String  @id @default(uuid())
  refreshToken   String?

  //relation
  account   Account @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  accountId String
}

model Teacher {
  teacherId String @id @default(uuid())
  firstname String
  lastname  String
  username  String @unique

  //relation
  account   Account @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  //accountId act as teacherId for queries cause the current user which is the account model is the teacher
  accountId String  @unique

  attendanceData AttendanceDate[]
  Student        Student[]
}

model Student {
  studentId String   @id @default(uuid())
  firstname String
  lastname  String
  grade     Int
  section   String
  batch     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //relation
  teacher   Teacher @relation(fields: [accountId], references: [accountId])
  accountId String

  attendanceDate AttendanceDate[]

  @@unique([firstname, lastname])
}

model AttendanceDate {
  attendanceDateId String @id @default(uuid())
  date             String
  status           Status

  //relation
  student   Student @relation(fields: [studentId], references: [studentId], onDelete: Cascade)
  studentId String

  teacher   Teacher @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  accountId String

  @@unique([studentId, date])
}

//for AttendaceDate status field
enum Status {
  PRESENT
  ABSENT
  LATE
  EXCUSE
}
